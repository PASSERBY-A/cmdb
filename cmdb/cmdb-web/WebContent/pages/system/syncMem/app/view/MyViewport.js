/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyViewport', {
    extend: 'Ext.container.Viewport',

    border: 0,
    layout: {
        type: 'fit'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    frame: true,
                    layout: {
                        type: 'auto'
                    },
                    bodyPadding: 30,
                    title: '同步内存',
                    items: [
                        {
                            xtype: 'label',
                            height: 50,
                            width: 588,
                            text: '如果修改了告警处理的规则，比如：告警过滤规则、合并规则、告警转译规则等，您需要同步内存以使其生效。如果对监控对象进行了调整，比如新增监控对象，修改关键属性，也需要同步。'
                        },
                        {
                            xtype: 'displayfield',
                            fieldLabel: ''
                        },
                        {
                            xtype: 'checkboxfield',
                            fieldLabel: '',
                            boxLabel: '同步告警处理规则到内存',
                            checked: true
                        },
                        {
                            xtype: 'checkboxfield',
                            fieldLabel: '',
                            boxLabel: '同步监控对象到内存',
                            checked: true
                        },
                        {
                            xtype: 'displayfield',
                            fieldLabel: ''
                        },
                        {
                            xtype: 'button',
                            height: 39,
                            width: 139,
                            text: '同步内存',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onButtonClick: function(button, e, eOpts) {
        button.disable();


        Ext.MessageBox.show({
            msg: '正在同步内存，请稍候...',
            progressText: 'Processing...',
            width:300,
            wait:true,
            waitConfig: {interval:200},
            icon:'icon-loading'
        });



        Ext.Ajax.request({
            url: '../../../deploy/syncMem',
            params: {},
            success: function(response, opts) {
                button.enable();
                Ext.MessageBox.hide();
                var obj=Ext.decode(response.responseText);
                Ext.Msg.alert('更新内存', obj.msg); 

            },
            failure: function(response, opts) {
                Ext.Msg.alert('更新内存', '同步失败，请稍后再试。');
                Ext.MessageBox.hide();
                button.enable();
            }
        });


    }

});